return {
	"ibhagwan/fzf-lua",
	enabled = true,
	dependencies = {
		"kyazdani42/nvim-web-devicons",
		"nvim-telescope/telescope.nvim",
	},
	cmd = "FzfLua",
	keys = {
		-- { mode = "n", "<A-f>", ":FzfLua files<CR>", desc = "find files", { silent = true } },
		{
			mode = "n",
			"<A-f>",
			":lua require('fzf-lua').files({winopts={preview={hidden='hidden'}},fzf_opts={['--layout']='default'}})<cr>",
			desc = "find files",
			silent = true,
		},
		{
			mode = "n",
			"<A-a>",
			":lua require('fzf-lua').files({fd_opts = '--color=never --type f --hidden --follow --no-ignore', winopts={preview={hidden='hidden'}},fzf_opts={['--layout']='default'}})<CR>",
			desc = "find hidden/ignored files",
			silent = true,
		},
		{ mode = "n", "<leader>bb", desc = "buffers list", ":FzfLua buffers<CR>", silent = true },
		{ mode = "n", "<leader>ta", desc = "tabs list", ":FzfLua tabs<CR>", silent = true },
		{ mode = "n", "<leader>ho", desc = "old files", ":FzfLua oldfiles<CR>", silent = true },
		-- { mode = "n", "<leader>ll", desc = "lines from all buffers", ":FzfLua lines<CR>", { silent = true } },
		{
			mode = "n",
			"<leader>ll",
			desc = "lines from all buffers",
			":lua require('fzf-lua').lines({winopts={preview={hidden='hidden'}}})<CR>",
			silent = true,
		},
		{ mode = "n", "<leader>lb", ":FzfLua lgrep_curbuf<CR>", desc = "buffer lines", silent = true },
		{ mode = "n", "<leader>gst", desc = "git status", ":FzfLua git_status<CR>", silent = true },
		-- { mode = "n", "<leader>gls", desc = "git files", ":FzfLua git_files<CR>", silent = true },
		{
			mode = "n",
			"<leader>gls",
			desc = "git files",
			":lua require('fzf-lua').git_files({winopts={preview={hidden='hidden'}}})<CR>",
			silent = true,
		},
		{ mode = "n", "<leader>fgl", desc = "project commits", ":FzfLua git_commits<CR>", silent = true },
		{ mode = "n", "<leader>fgb", desc = "buffer commits", ":FzfLua git_bcommits<CR>", silent = true },
		{ mode = "n", "<leader>gbb", desc = "git branches", ":FzfLua git_branches<CR>", silent = true },
		{ mode = "n", "<leader>gsh", desc = "git stash list", ":FzfLua git_stash<CR>", silent = true },
		{ mode = "n", "<leader>gt", desc = "git tags", ":FzfLua git_tags<CR>", silent = true },
		-- { mode = "n", "<leader>oo",  desc = "lsp symbols",     ":FzfLua lsp_document_symbols<CR>", silent = true },
		{
			mode = "n",
			"<leader>tt",
			":lua require('fzf-lua').lsp_live_workspace_symbols({ file_ignore_patterns = { '^node_modules/' }, })<CR>",
			desc = "live workspace symbols",
			silent = true,
		},
		-- { mode = "n", "<leader>ka", desc = "code actions", ":FzfLua lsp_code_actions<CR>", silent = true },
		{
			mode = "n",
			"<leader>ka",
			desc = "code actions",
			":lua require('fzf-lua').lsp_code_actions({winopts={preview={hidden='hidden'}}})<CR>",
			silent = true,
		},
		{
			mode = "n",
			"gR",
			":FzfLua lsp_finder<CR>",
			desc = "all lsp refs",
			silent = true,
		},
		{
			mode = "n",
			"<leader>lw",
			desc = "project diagnostics",
			":FzfLua lsp_workspace_diagnostics<CR>",
			silent = true,
		},
		{
			mode = "n",
			"<leader>bt",
			desc = "fzflua builtins",
			":FzfLua builtin<CR>",
			silent = true,
		},
		{
			mode = "n",
			"<leader>ht",
			desc = "help tags",
			":FzfLua help_tags<CR>",
			silent = true,
		},
		{
			mode = "n",
			"<leader>hc",
			desc = "comand history",
			":FzfLua command_history<CR>",
			silent = true,
		},
		{
			mode = "n",
			"<leader>hs",
			desc = "search history",
			":FzfLua search_history<CR>",
			silent = true,
		},
		{
			mode = "n",
			"<leader>fk",
			desc = "keymaps",
			":FzfLua keymaps<CR>",
			silent = true,
		},
		{
			mode = "n",
			"<leader>ol",
			desc = "project tags",
			":FzfLua tags<CR>",
			silent = true,
		},
		{
			mode = "n",
			"<leader>tb",
			desc = "buffer tags",
			":FzfLua btags<CR>",
			silent = true,
		},
		{
			mode = "n",
			"<leader>tw",
			desc = "grep tag word",
			":FzfLua tags_grep_cword<CR>",
			silent = true,
		},
		{
			mode = "n",
			"<leader>tl",
			desc = "live tag",
			":FzfLua tags_live_grep<CR>",
			silent = true,
		},
		{
			mode = "n",
			"<leader><leader>",
			":FzfLua grep_project<CR>",
			desc = "grep with rules",
			silent = true,
		},
		{
			mode = "n",
			"<leader>a",
			":lua require('fzf-lua').grep_project({rg_opts = '--hidden --no-ignore --column --line-number --no-heading --color=always --smart-case --max-columns=4096'})<CR>",
			desc = "grep all",
			silent = true,
		},
		{ mode = "n", "<leader>gw", ":FzfLua grep_cword<CR>", desc = "grep word", silent = true },
	},
	config = function()
		local actions = require("fzf-lua.actions")
		require("fzf-lua").setup({
			"telescope",
			previewers = {
				builtin = {
					extensions = {
						["png"] = { "ueberzug" },
						["jpg"] = { "ueberzug" },
						["svg"] = { "ueberzug" },
						["jpeg"] = { "ueberzug" },
					},
				},
			},
			git = {
				status = {

					actions = {
						["alt-l"] = { actions.git_unstage, actions.resume },
						["alt-h"] = { actions.git_stage, actions.resume },
					},
				},
			},
		})
	end,
}
